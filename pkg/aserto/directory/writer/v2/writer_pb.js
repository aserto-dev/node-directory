// source: aserto/directory/writer/v2/writer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var aserto_directory_v2_object_pb = require('../../../../aserto/directory/v2/object_pb.js');
goog.object.extend(proto, aserto_directory_v2_object_pb);
var aserto_directory_v2_permission_pb = require('../../../../aserto/directory/v2/permission_pb.js');
goog.object.extend(proto, aserto_directory_v2_permission_pb);
var aserto_directory_v2_relation_pb = require('../../../../aserto/directory/v2/relation_pb.js');
goog.object.extend(proto, aserto_directory_v2_relation_pb);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteObjectRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteObjectResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteObjectTypeRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteObjectTypeResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeletePermissionRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeletePermissionResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteRelationRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteRelationResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteRelationTypeRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.DeleteRelationTypeResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetObjectRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetObjectResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetObjectTypeRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetObjectTypeResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetPermissionRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetPermissionResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetRelationRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetRelationResponse', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetRelationTypeRequest', null, global);
goog.exportSymbol('proto.aserto.directory.writer.v2.SetRelationTypeResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetObjectTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetObjectTypeRequest.displayName = 'proto.aserto.directory.writer.v2.SetObjectTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aserto.directory.writer.v2.SetObjectTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetObjectTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetObjectTypeResponse.displayName = 'proto.aserto.directory.writer.v2.SetObjectTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteObjectTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.displayName = 'proto.aserto.directory.writer.v2.DeleteObjectTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteObjectTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.displayName = 'proto.aserto.directory.writer.v2.DeleteObjectTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetRelationTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetRelationTypeRequest.displayName = 'proto.aserto.directory.writer.v2.SetRelationTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aserto.directory.writer.v2.SetRelationTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetRelationTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetRelationTypeResponse.displayName = 'proto.aserto.directory.writer.v2.SetRelationTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteRelationTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.displayName = 'proto.aserto.directory.writer.v2.DeleteRelationTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteRelationTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.displayName = 'proto.aserto.directory.writer.v2.DeleteRelationTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetPermissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetPermissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetPermissionRequest.displayName = 'proto.aserto.directory.writer.v2.SetPermissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetPermissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aserto.directory.writer.v2.SetPermissionResponse.repeatedFields_, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetPermissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetPermissionResponse.displayName = 'proto.aserto.directory.writer.v2.SetPermissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeletePermissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeletePermissionRequest.displayName = 'proto.aserto.directory.writer.v2.DeletePermissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeletePermissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeletePermissionResponse.displayName = 'proto.aserto.directory.writer.v2.DeletePermissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetObjectRequest.displayName = 'proto.aserto.directory.writer.v2.SetObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aserto.directory.writer.v2.SetObjectResponse.repeatedFields_, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetObjectResponse.displayName = 'proto.aserto.directory.writer.v2.SetObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteObjectRequest.displayName = 'proto.aserto.directory.writer.v2.DeleteObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteObjectResponse.displayName = 'proto.aserto.directory.writer.v2.DeleteObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetRelationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetRelationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetRelationRequest.displayName = 'proto.aserto.directory.writer.v2.SetRelationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.SetRelationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aserto.directory.writer.v2.SetRelationResponse.repeatedFields_, null);
};
goog.inherits(proto.aserto.directory.writer.v2.SetRelationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.SetRelationResponse.displayName = 'proto.aserto.directory.writer.v2.SetRelationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteRelationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteRelationRequest.displayName = 'proto.aserto.directory.writer.v2.DeleteRelationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aserto.directory.writer.v2.DeleteRelationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aserto.directory.writer.v2.DeleteRelationResponse.displayName = 'proto.aserto.directory.writer.v2.DeleteRelationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetObjectTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectType: (f = msg.getObjectType()) && aserto_directory_v2_object_pb.ObjectType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeRequest}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetObjectTypeRequest;
  return proto.aserto.directory.writer.v2.SetObjectTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeRequest}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.ObjectType;
      reader.readMessage(value,aserto_directory_v2_object_pb.ObjectType.deserializeBinaryFromReader);
      msg.setObjectType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetObjectTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_object_pb.ObjectType.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.ObjectType object_type = 1;
 * @return {?proto.aserto.directory.v2.ObjectType}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.getObjectType = function() {
  return /** @type{?proto.aserto.directory.v2.ObjectType} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_object_pb.ObjectType, 1));
};


/**
 * @param {?proto.aserto.directory.v2.ObjectType|undefined} value
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeRequest} returns this
*/
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.setObjectType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeRequest} returns this
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.clearObjectType = function() {
  return this.setObjectType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.SetObjectTypeRequest.prototype.hasObjectType = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetObjectTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    aserto_directory_v2_object_pb.ObjectType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeResponse}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetObjectTypeResponse;
  return proto.aserto.directory.writer.v2.SetObjectTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeResponse}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.ObjectType;
      reader.readMessage(value,aserto_directory_v2_object_pb.ObjectType.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetObjectTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetObjectTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      aserto_directory_v2_object_pb.ObjectType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aserto.directory.v2.ObjectType results = 1;
 * @return {!Array<!proto.aserto.directory.v2.ObjectType>}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.aserto.directory.v2.ObjectType>} */ (
    jspb.Message.getRepeatedWrapperField(this, aserto_directory_v2_object_pb.ObjectType, 1));
};


/**
 * @param {!Array<!proto.aserto.directory.v2.ObjectType>} value
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeResponse} returns this
*/
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aserto.directory.v2.ObjectType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aserto.directory.v2.ObjectType}
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aserto.directory.v2.ObjectType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aserto.directory.writer.v2.SetObjectTypeResponse} returns this
 */
proto.aserto.directory.writer.v2.SetObjectTypeResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    param: (f = msg.getParam()) && aserto_directory_v2_object_pb.ObjectTypeParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteObjectTypeRequest;
  return proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.ObjectTypeParam;
      reader.readMessage(value,aserto_directory_v2_object_pb.ObjectTypeParam.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_object_pb.ObjectTypeParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.ObjectTypeParam param = 1;
 * @return {?proto.aserto.directory.v2.ObjectTypeParam}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.getParam = function() {
  return /** @type{?proto.aserto.directory.v2.ObjectTypeParam} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_object_pb.ObjectTypeParam, 1));
};


/**
 * @param {?proto.aserto.directory.v2.ObjectTypeParam|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest} returns this
*/
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeRequest} returns this
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeRequest.prototype.hasParam = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteObjectTypeResponse;
  return proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty result = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse} returns this
*/
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectTypeResponse} returns this
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteObjectTypeResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetRelationTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    relationType: (f = msg.getRelationType()) && aserto_directory_v2_relation_pb.RelationType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeRequest}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetRelationTypeRequest;
  return proto.aserto.directory.writer.v2.SetRelationTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeRequest}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.RelationType;
      reader.readMessage(value,aserto_directory_v2_relation_pb.RelationType.deserializeBinaryFromReader);
      msg.setRelationType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetRelationTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.RelationType.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.RelationType relation_type = 1;
 * @return {?proto.aserto.directory.v2.RelationType}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.getRelationType = function() {
  return /** @type{?proto.aserto.directory.v2.RelationType} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_relation_pb.RelationType, 1));
};


/**
 * @param {?proto.aserto.directory.v2.RelationType|undefined} value
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeRequest} returns this
*/
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.setRelationType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeRequest} returns this
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.clearRelationType = function() {
  return this.setRelationType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.SetRelationTypeRequest.prototype.hasRelationType = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetRelationTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    aserto_directory_v2_relation_pb.RelationType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeResponse}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetRelationTypeResponse;
  return proto.aserto.directory.writer.v2.SetRelationTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeResponse}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.RelationType;
      reader.readMessage(value,aserto_directory_v2_relation_pb.RelationType.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetRelationTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetRelationTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.RelationType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aserto.directory.v2.RelationType results = 1;
 * @return {!Array<!proto.aserto.directory.v2.RelationType>}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.aserto.directory.v2.RelationType>} */ (
    jspb.Message.getRepeatedWrapperField(this, aserto_directory_v2_relation_pb.RelationType, 1));
};


/**
 * @param {!Array<!proto.aserto.directory.v2.RelationType>} value
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeResponse} returns this
*/
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aserto.directory.v2.RelationType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aserto.directory.v2.RelationType}
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aserto.directory.v2.RelationType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aserto.directory.writer.v2.SetRelationTypeResponse} returns this
 */
proto.aserto.directory.writer.v2.SetRelationTypeResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    param: (f = msg.getParam()) && aserto_directory_v2_relation_pb.RelationTypeParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteRelationTypeRequest;
  return proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.RelationTypeParam;
      reader.readMessage(value,aserto_directory_v2_relation_pb.RelationTypeParam.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.RelationTypeParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.RelationTypeParam param = 1;
 * @return {?proto.aserto.directory.v2.RelationTypeParam}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.getParam = function() {
  return /** @type{?proto.aserto.directory.v2.RelationTypeParam} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_relation_pb.RelationTypeParam, 1));
};


/**
 * @param {?proto.aserto.directory.v2.RelationTypeParam|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest} returns this
*/
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeRequest} returns this
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeRequest.prototype.hasParam = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteRelationTypeResponse;
  return proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty result = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse} returns this
*/
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationTypeResponse} returns this
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteRelationTypeResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetPermissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetPermissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    permission: (f = msg.getPermission()) && aserto_directory_v2_permission_pb.Permission.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionRequest}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetPermissionRequest;
  return proto.aserto.directory.writer.v2.SetPermissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetPermissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionRequest}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_permission_pb.Permission;
      reader.readMessage(value,aserto_directory_v2_permission_pb.Permission.deserializeBinaryFromReader);
      msg.setPermission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetPermissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetPermissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermission();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_permission_pb.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.Permission permission = 1;
 * @return {?proto.aserto.directory.v2.Permission}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.getPermission = function() {
  return /** @type{?proto.aserto.directory.v2.Permission} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_permission_pb.Permission, 1));
};


/**
 * @param {?proto.aserto.directory.v2.Permission|undefined} value
 * @return {!proto.aserto.directory.writer.v2.SetPermissionRequest} returns this
*/
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.setPermission = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionRequest} returns this
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.clearPermission = function() {
  return this.setPermission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.SetPermissionRequest.prototype.hasPermission = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetPermissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetPermissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    aserto_directory_v2_permission_pb.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionResponse}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetPermissionResponse;
  return proto.aserto.directory.writer.v2.SetPermissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetPermissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionResponse}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_permission_pb.Permission;
      reader.readMessage(value,aserto_directory_v2_permission_pb.Permission.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetPermissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetPermissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      aserto_directory_v2_permission_pb.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aserto.directory.v2.Permission results = 1;
 * @return {!Array<!proto.aserto.directory.v2.Permission>}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.aserto.directory.v2.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, aserto_directory_v2_permission_pb.Permission, 1));
};


/**
 * @param {!Array<!proto.aserto.directory.v2.Permission>} value
 * @return {!proto.aserto.directory.writer.v2.SetPermissionResponse} returns this
*/
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aserto.directory.v2.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aserto.directory.v2.Permission}
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aserto.directory.v2.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aserto.directory.writer.v2.SetPermissionResponse} returns this
 */
proto.aserto.directory.writer.v2.SetPermissionResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeletePermissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    param: (f = msg.getParam()) && aserto_directory_v2_permission_pb.PermissionParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionRequest}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeletePermissionRequest;
  return proto.aserto.directory.writer.v2.DeletePermissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionRequest}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_permission_pb.PermissionParam;
      reader.readMessage(value,aserto_directory_v2_permission_pb.PermissionParam.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeletePermissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_permission_pb.PermissionParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.PermissionParam param = 1;
 * @return {?proto.aserto.directory.v2.PermissionParam}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.getParam = function() {
  return /** @type{?proto.aserto.directory.v2.PermissionParam} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_permission_pb.PermissionParam, 1));
};


/**
 * @param {?proto.aserto.directory.v2.PermissionParam|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionRequest} returns this
*/
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionRequest} returns this
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeletePermissionRequest.prototype.hasParam = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeletePermissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionResponse}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeletePermissionResponse;
  return proto.aserto.directory.writer.v2.DeletePermissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionResponse}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeletePermissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeletePermissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty result = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionResponse} returns this
*/
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeletePermissionResponse} returns this
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeletePermissionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && aserto_directory_v2_object_pb.Object.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetObjectRequest}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetObjectRequest;
  return proto.aserto.directory.writer.v2.SetObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetObjectRequest}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.Object;
      reader.readMessage(value,aserto_directory_v2_object_pb.Object.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_object_pb.Object.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.Object object = 1;
 * @return {?proto.aserto.directory.v2.Object}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.getObject = function() {
  return /** @type{?proto.aserto.directory.v2.Object} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_object_pb.Object, 1));
};


/**
 * @param {?proto.aserto.directory.v2.Object|undefined} value
 * @return {!proto.aserto.directory.writer.v2.SetObjectRequest} returns this
*/
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.SetObjectRequest} returns this
 */
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.SetObjectRequest.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aserto.directory.writer.v2.SetObjectResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    aserto_directory_v2_object_pb.Object.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetObjectResponse}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetObjectResponse;
  return proto.aserto.directory.writer.v2.SetObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetObjectResponse}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.Object;
      reader.readMessage(value,aserto_directory_v2_object_pb.Object.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      aserto_directory_v2_object_pb.Object.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aserto.directory.v2.Object results = 1;
 * @return {!Array<!proto.aserto.directory.v2.Object>}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.aserto.directory.v2.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, aserto_directory_v2_object_pb.Object, 1));
};


/**
 * @param {!Array<!proto.aserto.directory.v2.Object>} value
 * @return {!proto.aserto.directory.writer.v2.SetObjectResponse} returns this
*/
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aserto.directory.v2.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aserto.directory.v2.Object}
 */
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aserto.directory.v2.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aserto.directory.writer.v2.SetObjectResponse} returns this
 */
proto.aserto.directory.writer.v2.SetObjectResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    param: (f = msg.getParam()) && aserto_directory_v2_object_pb.ObjectParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectRequest}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteObjectRequest;
  return proto.aserto.directory.writer.v2.DeleteObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectRequest}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_object_pb.ObjectParam;
      reader.readMessage(value,aserto_directory_v2_object_pb.ObjectParam.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_object_pb.ObjectParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.ObjectParam param = 1;
 * @return {?proto.aserto.directory.v2.ObjectParam}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.getParam = function() {
  return /** @type{?proto.aserto.directory.v2.ObjectParam} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_object_pb.ObjectParam, 1));
};


/**
 * @param {?proto.aserto.directory.v2.ObjectParam|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectRequest} returns this
*/
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectRequest} returns this
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteObjectRequest.prototype.hasParam = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectResponse}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteObjectResponse;
  return proto.aserto.directory.writer.v2.DeleteObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectResponse}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty result = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectResponse} returns this
*/
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteObjectResponse} returns this
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteObjectResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetRelationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetRelationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    relation: (f = msg.getRelation()) && aserto_directory_v2_relation_pb.Relation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetRelationRequest}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetRelationRequest;
  return proto.aserto.directory.writer.v2.SetRelationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetRelationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetRelationRequest}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.Relation;
      reader.readMessage(value,aserto_directory_v2_relation_pb.Relation.deserializeBinaryFromReader);
      msg.setRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetRelationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetRelationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.Relation.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.Relation relation = 1;
 * @return {?proto.aserto.directory.v2.Relation}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.getRelation = function() {
  return /** @type{?proto.aserto.directory.v2.Relation} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_relation_pb.Relation, 1));
};


/**
 * @param {?proto.aserto.directory.v2.Relation|undefined} value
 * @return {!proto.aserto.directory.writer.v2.SetRelationRequest} returns this
*/
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.setRelation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.SetRelationRequest} returns this
 */
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.clearRelation = function() {
  return this.setRelation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.SetRelationRequest.prototype.hasRelation = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aserto.directory.writer.v2.SetRelationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.SetRelationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.SetRelationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    aserto_directory_v2_relation_pb.Relation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.SetRelationResponse}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.SetRelationResponse;
  return proto.aserto.directory.writer.v2.SetRelationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.SetRelationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.SetRelationResponse}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.Relation;
      reader.readMessage(value,aserto_directory_v2_relation_pb.Relation.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.SetRelationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.SetRelationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.SetRelationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.Relation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated aserto.directory.v2.Relation results = 1;
 * @return {!Array<!proto.aserto.directory.v2.Relation>}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.aserto.directory.v2.Relation>} */ (
    jspb.Message.getRepeatedWrapperField(this, aserto_directory_v2_relation_pb.Relation, 1));
};


/**
 * @param {!Array<!proto.aserto.directory.v2.Relation>} value
 * @return {!proto.aserto.directory.writer.v2.SetRelationResponse} returns this
*/
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aserto.directory.v2.Relation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aserto.directory.v2.Relation}
 */
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aserto.directory.v2.Relation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aserto.directory.writer.v2.SetRelationResponse} returns this
 */
proto.aserto.directory.writer.v2.SetRelationResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteRelationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    param: (f = msg.getParam()) && aserto_directory_v2_relation_pb.RelationParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationRequest}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteRelationRequest;
  return proto.aserto.directory.writer.v2.DeleteRelationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationRequest}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new aserto_directory_v2_relation_pb.RelationParam;
      reader.readMessage(value,aserto_directory_v2_relation_pb.RelationParam.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteRelationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      aserto_directory_v2_relation_pb.RelationParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional aserto.directory.v2.RelationParam param = 1;
 * @return {?proto.aserto.directory.v2.RelationParam}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.getParam = function() {
  return /** @type{?proto.aserto.directory.v2.RelationParam} */ (
    jspb.Message.getWrapperField(this, aserto_directory_v2_relation_pb.RelationParam, 1));
};


/**
 * @param {?proto.aserto.directory.v2.RelationParam|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationRequest} returns this
*/
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationRequest} returns this
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteRelationRequest.prototype.hasParam = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aserto.directory.writer.v2.DeleteRelationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationResponse}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aserto.directory.writer.v2.DeleteRelationResponse;
  return proto.aserto.directory.writer.v2.DeleteRelationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationResponse}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aserto.directory.writer.v2.DeleteRelationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aserto.directory.writer.v2.DeleteRelationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty result = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationResponse} returns this
*/
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aserto.directory.writer.v2.DeleteRelationResponse} returns this
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aserto.directory.writer.v2.DeleteRelationResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.aserto.directory.writer.v2);
