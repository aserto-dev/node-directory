"use strict";
// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file aserto/directory/model/v3/model.proto (package aserto.directory.model.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Body = exports.Metadata = exports.DeleteManifestResponse = exports.DeleteManifestRequest = exports.SetManifestResponse = exports.SetManifestRequest = exports.GetManifestResponse = exports.GetManifestRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message aserto.directory.model.v3.GetManifestRequest
 */
class GetManifestRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetManifestRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetManifestRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetManifestRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetManifestRequest, a, b);
    }
}
exports.GetManifestRequest = GetManifestRequest;
GetManifestRequest.runtime = protobuf_1.proto3;
GetManifestRequest.typeName = "aserto.directory.model.v3.GetManifestRequest";
GetManifestRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "empty", kind: "message", T: protobuf_1.Empty },
]);
/**
 * @generated from message aserto.directory.model.v3.GetManifestResponse
 */
class GetManifestResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof aserto.directory.model.v3.GetManifestResponse.msg
         */
        this.msg = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetManifestResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetManifestResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetManifestResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetManifestResponse, a, b);
    }
}
exports.GetManifestResponse = GetManifestResponse;
GetManifestResponse.runtime = protobuf_1.proto3;
GetManifestResponse.typeName = "aserto.directory.model.v3.GetManifestResponse";
GetManifestResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Metadata, oneof: "msg" },
    { no: 2, name: "body", kind: "message", T: Body, oneof: "msg" },
    { no: 3, name: "model", kind: "message", T: protobuf_1.Struct, oneof: "msg" },
]);
/**
 * @generated from message aserto.directory.model.v3.SetManifestRequest
 */
class SetManifestRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * manifest instance
         *
         * @generated from oneof aserto.directory.model.v3.SetManifestRequest.msg
         */
        this.msg = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SetManifestRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetManifestRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetManifestRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SetManifestRequest, a, b);
    }
}
exports.SetManifestRequest = SetManifestRequest;
SetManifestRequest.runtime = protobuf_1.proto3;
SetManifestRequest.typeName = "aserto.directory.model.v3.SetManifestRequest";
SetManifestRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "body", kind: "message", T: Body, oneof: "msg" },
]);
/**
 * @generated from message aserto.directory.model.v3.SetManifestResponse
 */
class SetManifestResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SetManifestResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetManifestResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetManifestResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SetManifestResponse, a, b);
    }
}
exports.SetManifestResponse = SetManifestResponse;
SetManifestResponse.runtime = protobuf_1.proto3;
SetManifestResponse.typeName = "aserto.directory.model.v3.SetManifestResponse";
SetManifestResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: protobuf_1.Empty },
]);
/**
 * @generated from message aserto.directory.model.v3.DeleteManifestRequest
 */
class DeleteManifestRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteManifestRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteManifestRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteManifestRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DeleteManifestRequest, a, b);
    }
}
exports.DeleteManifestRequest = DeleteManifestRequest;
DeleteManifestRequest.runtime = protobuf_1.proto3;
DeleteManifestRequest.typeName = "aserto.directory.model.v3.DeleteManifestRequest";
DeleteManifestRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "empty", kind: "message", T: protobuf_1.Empty },
]);
/**
 * @generated from message aserto.directory.model.v3.DeleteManifestResponse
 */
class DeleteManifestResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteManifestResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteManifestResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteManifestResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DeleteManifestResponse, a, b);
    }
}
exports.DeleteManifestResponse = DeleteManifestResponse;
DeleteManifestResponse.runtime = protobuf_1.proto3;
DeleteManifestResponse.typeName = "aserto.directory.model.v3.DeleteManifestResponse";
DeleteManifestResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: protobuf_1.Empty },
]);
/**
 * @generated from message aserto.directory.model.v3.Metadata
 */
class Metadata extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * object instance etag
         *
         * @generated from field: string etag = 23;
         */
        this.etag = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Metadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Metadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Metadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Metadata, a, b);
    }
}
exports.Metadata = Metadata;
Metadata.runtime = protobuf_1.proto3;
Metadata.typeName = "aserto.directory.model.v3.Metadata";
Metadata.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 21, name: "updated_at", kind: "message", T: protobuf_1.Timestamp },
    { no: 23, name: "etag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message aserto.directory.model.v3.Body
 */
class Body extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * manifest content
         *
         * @generated from field: bytes data = 2;
         */
        this.data = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Body().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Body().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Body().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Body, a, b);
    }
}
exports.Body = Body;
Body.runtime = protobuf_1.proto3;
Body.typeName = "aserto.directory.model.v3.Body";
Body.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
