"use strict";
// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file aserto/directory/writer/v2/writer.proto (package aserto.directory.writer.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Writer = void 0;
const writer_pb_js_1 = require("./writer_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from service aserto.directory.writer.v2.Writer
 */
exports.Writer = {
    typeName: "aserto.directory.writer.v2.Writer",
    methods: {
        /**
         * object type metadata methods
         *
         * @generated from rpc aserto.directory.writer.v2.Writer.SetObjectType
         */
        setObjectType: {
            name: "SetObjectType",
            I: writer_pb_js_1.SetObjectTypeRequest,
            O: writer_pb_js_1.SetObjectTypeResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc aserto.directory.writer.v2.Writer.DeleteObjectType
         */
        deleteObjectType: {
            name: "DeleteObjectType",
            I: writer_pb_js_1.DeleteObjectTypeRequest,
            O: writer_pb_js_1.DeleteObjectTypeResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * relation type metadata methods
         *
         * @generated from rpc aserto.directory.writer.v2.Writer.SetRelationType
         */
        setRelationType: {
            name: "SetRelationType",
            I: writer_pb_js_1.SetRelationTypeRequest,
            O: writer_pb_js_1.SetRelationTypeResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc aserto.directory.writer.v2.Writer.DeleteRelationType
         */
        deleteRelationType: {
            name: "DeleteRelationType",
            I: writer_pb_js_1.DeleteRelationTypeRequest,
            O: writer_pb_js_1.DeleteRelationTypeResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * permission metadata methods
         *
         * @generated from rpc aserto.directory.writer.v2.Writer.SetPermission
         */
        setPermission: {
            name: "SetPermission",
            I: writer_pb_js_1.SetPermissionRequest,
            O: writer_pb_js_1.SetPermissionResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc aserto.directory.writer.v2.Writer.DeletePermission
         */
        deletePermission: {
            name: "DeletePermission",
            I: writer_pb_js_1.DeletePermissionRequest,
            O: writer_pb_js_1.DeletePermissionResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * object methods
         *
         * @generated from rpc aserto.directory.writer.v2.Writer.SetObject
         */
        setObject: {
            name: "SetObject",
            I: writer_pb_js_1.SetObjectRequest,
            O: writer_pb_js_1.SetObjectResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc aserto.directory.writer.v2.Writer.DeleteObject
         */
        deleteObject: {
            name: "DeleteObject",
            I: writer_pb_js_1.DeleteObjectRequest,
            O: writer_pb_js_1.DeleteObjectResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * relation methods
         *
         * @generated from rpc aserto.directory.writer.v2.Writer.SetRelation
         */
        setRelation: {
            name: "SetRelation",
            I: writer_pb_js_1.SetRelationRequest,
            O: writer_pb_js_1.SetRelationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * @generated from rpc aserto.directory.writer.v2.Writer.DeleteRelation
         */
        deleteRelation: {
            name: "DeleteRelation",
            I: writer_pb_js_1.DeleteRelationRequest,
            O: writer_pb_js_1.DeleteRelationResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
