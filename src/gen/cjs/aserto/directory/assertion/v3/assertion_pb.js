"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file aserto/directory/assertion/v3/assertion.proto (package aserto.directory.assertion.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Assert = exports.DeleteAssertionResponse = exports.DeleteAssertionRequest = exports.SetAssertionResponse = exports.SetAssertionRequest = exports.ListAssertionsResponse = exports.ListAssertionsRequest = exports.GetAssertionResponse = exports.GetAssertionRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const common_pb_js_1 = require("../../common/v3/common_pb.js");
const reader_pb_js_1 = require("../../reader/v3/reader_pb.js");
/**
 * @generated from message aserto.directory.assertion.v3.GetAssertionRequest
 */
class GetAssertionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * assertion identifier
         *
         * @generated from field: uint32 id = 1;
         */
        this.id = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetAssertionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetAssertionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetAssertionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetAssertionRequest, a, b);
    }
}
exports.GetAssertionRequest = GetAssertionRequest;
GetAssertionRequest.runtime = protobuf_1.proto3;
GetAssertionRequest.typeName = "aserto.directory.assertion.v3.GetAssertionRequest";
GetAssertionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message aserto.directory.assertion.v3.GetAssertionResponse
 */
class GetAssertionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetAssertionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetAssertionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetAssertionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetAssertionResponse, a, b);
    }
}
exports.GetAssertionResponse = GetAssertionResponse;
GetAssertionResponse.runtime = protobuf_1.proto3;
GetAssertionResponse.typeName = "aserto.directory.assertion.v3.GetAssertionResponse";
GetAssertionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: Assert },
]);
/**
 * @generated from message aserto.directory.assertion.v3.ListAssertionsRequest
 */
class ListAssertionsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListAssertionsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListAssertionsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListAssertionsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListAssertionsRequest, a, b);
    }
}
exports.ListAssertionsRequest = ListAssertionsRequest;
ListAssertionsRequest.runtime = protobuf_1.proto3;
ListAssertionsRequest.typeName = "aserto.directory.assertion.v3.ListAssertionsRequest";
ListAssertionsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "page", kind: "message", T: common_pb_js_1.PaginationRequest },
]);
/**
 * @generated from message aserto.directory.assertion.v3.ListAssertionsResponse
 */
class ListAssertionsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated aserto.directory.assertion.v3.Assert results = 1;
         */
        this.results = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListAssertionsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListAssertionsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListAssertionsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListAssertionsResponse, a, b);
    }
}
exports.ListAssertionsResponse = ListAssertionsResponse;
ListAssertionsResponse.runtime = protobuf_1.proto3;
ListAssertionsResponse.typeName = "aserto.directory.assertion.v3.ListAssertionsResponse";
ListAssertionsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "results", kind: "message", T: Assert, repeated: true },
    { no: 2, name: "page", kind: "message", T: common_pb_js_1.PaginationResponse },
]);
/**
 * @generated from message aserto.directory.assertion.v3.SetAssertionRequest
 */
class SetAssertionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SetAssertionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetAssertionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetAssertionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SetAssertionRequest, a, b);
    }
}
exports.SetAssertionRequest = SetAssertionRequest;
SetAssertionRequest.runtime = protobuf_1.proto3;
SetAssertionRequest.typeName = "aserto.directory.assertion.v3.SetAssertionRequest";
SetAssertionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "assert", kind: "message", T: Assert },
]);
/**
 * @generated from message aserto.directory.assertion.v3.SetAssertionResponse
 */
class SetAssertionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SetAssertionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetAssertionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetAssertionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SetAssertionResponse, a, b);
    }
}
exports.SetAssertionResponse = SetAssertionResponse;
SetAssertionResponse.runtime = protobuf_1.proto3;
SetAssertionResponse.typeName = "aserto.directory.assertion.v3.SetAssertionResponse";
SetAssertionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: Assert },
]);
/**
 * @generated from message aserto.directory.assertion.v3.DeleteAssertionRequest
 */
class DeleteAssertionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * assertion identifier
         *
         * @generated from field: uint32 id = 1;
         */
        this.id = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteAssertionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteAssertionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteAssertionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DeleteAssertionRequest, a, b);
    }
}
exports.DeleteAssertionRequest = DeleteAssertionRequest;
DeleteAssertionRequest.runtime = protobuf_1.proto3;
DeleteAssertionRequest.typeName = "aserto.directory.assertion.v3.DeleteAssertionRequest";
DeleteAssertionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message aserto.directory.assertion.v3.DeleteAssertionResponse
 */
class DeleteAssertionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DeleteAssertionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteAssertionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteAssertionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DeleteAssertionResponse, a, b);
    }
}
exports.DeleteAssertionResponse = DeleteAssertionResponse;
DeleteAssertionResponse.runtime = protobuf_1.proto3;
DeleteAssertionResponse.typeName = "aserto.directory.assertion.v3.DeleteAssertionResponse";
DeleteAssertionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: protobuf_1.Empty },
]);
/**
 * @generated from message aserto.directory.assertion.v3.Assert
 */
class Assert extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * assertion identifier
         *
         * @generated from field: uint32 id = 1;
         */
        this.id = 0;
        /**
         * expected outcome of assertion
         *
         * @generated from field: bool expected = 2;
         */
        this.expected = false;
        /**
         * assertion request
         *
         * @generated from oneof aserto.directory.assertion.v3.Assert.msg
         */
        this.msg = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Assert().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Assert().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Assert().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Assert, a, b);
    }
}
exports.Assert = Assert;
Assert.runtime = protobuf_1.proto3;
Assert.typeName = "aserto.directory.assertion.v3.Assert";
Assert.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "expected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "check", kind: "message", T: reader_pb_js_1.CheckRequest, oneof: "msg" },
    { no: 4, name: "check_relation", kind: "message", T: reader_pb_js_1.CheckRelationRequest, oneof: "msg" },
    { no: 5, name: "check_permission", kind: "message", T: reader_pb_js_1.CheckPermissionRequest, oneof: "msg" },
]);
