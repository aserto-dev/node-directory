// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file aserto/directory/writer/v2/writer.proto (package aserto.directory.writer.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Empty, Message, proto3 } from "@bufbuild/protobuf";
import { Object$, ObjectIdentifier, ObjectType, ObjectTypeIdentifier, Permission, PermissionIdentifier, Relation, RelationIdentifier, RelationType, RelationTypeIdentifier } from "../../common/v2/common_pb.js";
/**
 * @generated from message aserto.directory.writer.v2.SetObjectTypeRequest
 */
export class SetObjectTypeRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.ObjectType object_type = 1;
     */
    objectType;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetObjectTypeRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "object_type", kind: "message", T: ObjectType },
    ]);
    static fromBinary(bytes, options) {
        return new SetObjectTypeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetObjectTypeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetObjectTypeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetObjectTypeRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetObjectTypeResponse
 */
export class SetObjectTypeResponse extends Message {
    /**
     * object type instance
     *
     * @generated from field: aserto.directory.common.v2.ObjectType result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetObjectTypeResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: ObjectType },
    ]);
    static fromBinary(bytes, options) {
        return new SetObjectTypeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetObjectTypeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetObjectTypeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetObjectTypeResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteObjectTypeRequest
 */
export class DeleteObjectTypeRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.ObjectTypeIdentifier param = 1;
     */
    param;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteObjectTypeRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "param", kind: "message", T: ObjectTypeIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteObjectTypeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteObjectTypeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteObjectTypeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteObjectTypeRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteObjectTypeResponse
 */
export class DeleteObjectTypeResponse extends Message {
    /**
     * empty result
     *
     * @generated from field: google.protobuf.Empty result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteObjectTypeResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Empty },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteObjectTypeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteObjectTypeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteObjectTypeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteObjectTypeResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetRelationTypeRequest
 */
export class SetRelationTypeRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.RelationType relation_type = 1;
     */
    relationType;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetRelationTypeRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "relation_type", kind: "message", T: RelationType },
    ]);
    static fromBinary(bytes, options) {
        return new SetRelationTypeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetRelationTypeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetRelationTypeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetRelationTypeRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetRelationTypeResponse
 */
export class SetRelationTypeResponse extends Message {
    /**
     * relation types instance
     *
     * @generated from field: aserto.directory.common.v2.RelationType result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetRelationTypeResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: RelationType },
    ]);
    static fromBinary(bytes, options) {
        return new SetRelationTypeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetRelationTypeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetRelationTypeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetRelationTypeResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteRelationTypeRequest
 */
export class DeleteRelationTypeRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.RelationTypeIdentifier param = 1;
     */
    param;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteRelationTypeRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "param", kind: "message", T: RelationTypeIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteRelationTypeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteRelationTypeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteRelationTypeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteRelationTypeRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteRelationTypeResponse
 */
export class DeleteRelationTypeResponse extends Message {
    /**
     * empty result
     *
     * @generated from field: google.protobuf.Empty result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteRelationTypeResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Empty },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteRelationTypeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteRelationTypeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteRelationTypeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteRelationTypeResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetPermissionRequest
 */
export class SetPermissionRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.Permission permission = 1;
     */
    permission;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetPermissionRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "permission", kind: "message", T: Permission },
    ]);
    static fromBinary(bytes, options) {
        return new SetPermissionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetPermissionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetPermissionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetPermissionRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetPermissionResponse
 */
export class SetPermissionResponse extends Message {
    /**
     * permission instance
     *
     * @generated from field: aserto.directory.common.v2.Permission result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetPermissionResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Permission },
    ]);
    static fromBinary(bytes, options) {
        return new SetPermissionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetPermissionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetPermissionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetPermissionResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeletePermissionRequest
 */
export class DeletePermissionRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.PermissionIdentifier param = 1;
     */
    param;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeletePermissionRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "param", kind: "message", T: PermissionIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new DeletePermissionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeletePermissionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeletePermissionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeletePermissionRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeletePermissionResponse
 */
export class DeletePermissionResponse extends Message {
    /**
     * empty result
     *
     * @generated from field: google.protobuf.Empty result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeletePermissionResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Empty },
    ]);
    static fromBinary(bytes, options) {
        return new DeletePermissionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeletePermissionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeletePermissionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeletePermissionResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetObjectRequest
 */
export class SetObjectRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.Object object = 1;
     */
    object;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetObjectRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "object", kind: "message", T: Object$ },
    ]);
    static fromBinary(bytes, options) {
        return new SetObjectRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetObjectRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetObjectRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetObjectRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetObjectResponse
 */
export class SetObjectResponse extends Message {
    /**
     * object instance
     *
     * @generated from field: aserto.directory.common.v2.Object result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetObjectResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Object$ },
    ]);
    static fromBinary(bytes, options) {
        return new SetObjectResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetObjectResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetObjectResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetObjectResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteObjectRequest
 */
export class DeleteObjectRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.ObjectIdentifier param = 1;
     */
    param;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteObjectRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "param", kind: "message", T: ObjectIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteObjectRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteObjectRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteObjectRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteObjectRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteObjectResponse
 */
export class DeleteObjectResponse extends Message {
    /**
     * empty result
     *
     * @generated from field: google.protobuf.Empty result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteObjectResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Empty },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteObjectResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteObjectResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteObjectResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteObjectResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetRelationRequest
 */
export class SetRelationRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.Relation relation = 1;
     */
    relation;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetRelationRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "relation", kind: "message", T: Relation },
    ]);
    static fromBinary(bytes, options) {
        return new SetRelationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetRelationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetRelationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetRelationRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.SetRelationResponse
 */
export class SetRelationResponse extends Message {
    /**
     * relation instance
     *
     * @generated from field: aserto.directory.common.v2.Relation result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.SetRelationResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Relation },
    ]);
    static fromBinary(bytes, options) {
        return new SetRelationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SetRelationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SetRelationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SetRelationResponse, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteRelationRequest
 */
export class DeleteRelationRequest extends Message {
    /**
     *
     *
     * @generated from field: aserto.directory.common.v2.RelationIdentifier param = 1;
     */
    param;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteRelationRequest";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "param", kind: "message", T: RelationIdentifier },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteRelationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteRelationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteRelationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteRelationRequest, a, b);
    }
}
/**
 * @generated from message aserto.directory.writer.v2.DeleteRelationResponse
 */
export class DeleteRelationResponse extends Message {
    /**
     * empty result
     *
     * @generated from field: google.protobuf.Empty result = 1;
     */
    result;
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "aserto.directory.writer.v2.DeleteRelationResponse";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "result", kind: "message", T: Empty },
    ]);
    static fromBinary(bytes, options) {
        return new DeleteRelationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DeleteRelationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DeleteRelationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DeleteRelationResponse, a, b);
    }
}
